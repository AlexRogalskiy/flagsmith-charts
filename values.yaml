# Default values for flagsmith.

api:
    image:
        repository: bullettrain/api
        tag: latest
        imagePullPolicy: IfNotPresent
        imagePullSecrets: []
    replicacount: 1
    podAnnotations: {}
    resouces: {}
    # limits:
    #     cpu: 500m
    #     memory: 500Mi
    # requests:
    #     cpu: 300m
    #     memory: 300Mi
    podLables: {}
    env:
        - name: API_URL
          value: "bulletrain.com/api"
        - name: ASSET_URL
          value: "bulletrain.com/assets"
        - name: DJANGO_ALLOWED_HOSTS
          value: '*'
    nodeSelector: {}
    tolerations: []
    affinity: {}
    livenessProbe:
        failureThreshold: 5
        initialDelaySeconds: 50
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2
    readinessProbe:
        failureThreshold: 10
        initialDelaySeconds: 50
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 2

frontend:
    enabled: true
    image:
        repository: bullettrain/frontend
        tag: latest
        imagePullPolicy: IfNotPresent
        imagePullSecrets: []
    replicacount: 1
    resouces: {}
    # limits:
    #     cpu: 500m
    #     memory: 500Mi
    # requests:
    #     cpu: 300m
    #     memory: 300Mi
    env:
        - name: API_URL
          value: ''
        - name: ASSET_URL
          value: ''
    nodeSelector: {}
    tolerations: []
    affinity: {}
    livenessProbe:
        failureThreshold: 20
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
    readinessProbe:
        failureThreshold: 20
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10

postgresql:
    enabled: true
    nameOverride: flagsmith-postgresql
    postgresqlDatabase: flagsmith
    postgresqlUsername: postgres
    postgresqlPassword: flagsmith

influxdb:
    nameOverride: influxdb
    image:
        repository: quay.io/influxdb/influxdb
        tag: v2.0.2
        imagePullPolicy: IfNotPresent
        imagePullSecrets: []
    adminUser:
        organization: "influxdata"
        bucket: "default"
        user: "admin"
        ## Leave empty to generate a random password and token.
        ## Or fill any of these values to use fixed values.
        password: ""
        token: ""
    persistence:
        enabled: false
        # name: influxdb-pvc
        # storageClass: "-"
        # accessMode: ReadWriteOnce
        # size: 50Gi
    resources: {}
    nodeSelector: {}
    tolerations: []
    affinity: {}

metrics:
    enabled: false

hooks:
    enabled: false
    removeOnSuccess: true

service:
    influxdb:
        externalPort: 8080
    api:
        name: api-service
        type: LoadBalancer
        externalPort: 8000
        internalPort: 8000
        annotation: {}
    frontend:
        name: frontend-service
        type: LoadBalancer
        externalPort: 8080
        internalPort: 8080
        annotation: {}